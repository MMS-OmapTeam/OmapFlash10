# Specify platform memories
                                                 
memory       EMMC   driver Targets\Flash-Drivers\emmc_drv.bin parameters sid 1 width 8 delay 9 rpapi_base 0x00038400 mblock 1 ddr 1
memory       SDRAM  parameters address 0x80000000
                                                 
# Specify partitions (memory, size, partition name) - can be used in chip_download cmd and/or for Android partition table (these offsets are for Android)
# Note that if you use the 'oem format' command the partition table will end up in the first memory and location specified by the name '-'!

#            memory   size (kB)      name
partition    EMMC          128       -
partition    EMMC          128       xloader
partition    EMMC          256       bootloader
partition    EMMC          128       misc
partition    EMMC          384       -
partition    EMMC        16384       efs
partition    EMMC           16       crypto
partition    EMMC         8192       recovery
partition    EMMC         8192       boot
partition    EMMC       524288       system
partition    EMMC       262144       cache
partition    EMMC     32734192       userdata

# Get device definitions
                                                 
use          .\Targets\Definitions\definitions_omap5.txt 

RPAPI_BASE   0x00038400                          
HEAP_ADDR    HEAP_ADDR_16G

MODE_32                                          

WRITE        CM_EMIF_EMIF1_CLKCTRL                                           0x00000001
WRITE        CM_EMIF_EMIF2_CLKCTRL                                           0x00000001
POLL_VALUE   CM_EMIF_CLKSTCTRL                   0x00000700                  0x00000700

# Power configurations ------------------------------------------------------------------

# Configure SR I2C Clock

WRITE        PRM_VC_CFG_I2C_MODE                 0x00000000
WRITE        PRM_VC_CFG_I2C_CLK                  0x00006026

# Configure Palmas TWL6035

# MPU 1050 mV - SHOULD BE REGISTER 22h?
WRITE        PRM_VC_VAL_BYPASS                   0x013D2312
POLL_ZERO    PRM_VC_VAL_BYPASS                   0x01000000
MODIFY       PRM_IRQSTATUS_MPU                   0x00000000 0x00000000

# MM 1050 mV - SHOULD BE REGISTER 2Ah?
WRITE        PRM_VC_VAL_BYPASS                   0x013D2B12
POLL_ZERO    PRM_VC_VAL_BYPASS                   0x01000000
MODIFY       PRM_IRQSTATUS_MPU                   0x00000000 0x00000000

# CORE 1050 mV - SHOULD BE REGISTER 36h?
WRITE        PRM_VC_VAL_BYPASS                   0x013D3712
POLL_ZERO    PRM_VC_VAL_BYPASS                   0x01000000
MODIFY       PRM_IRQSTATUS_MPU                   0x00000000 0x00000000

#MODIFY 0x48053134 0x00000040 0x00000040
#WRITE 0x48053194 0x00000040


# NECESSARY TO PROGRAM FORCE INTO SMPS6 FOR 1.2V LPDDR SUPPLY?

# MPU VOLTAGE SET TO : 1100 mV
# CORE VOLTAGE SET TO : 1050 mV
# LPDDR VOLTAGE SET TO : 1200 mV
# IVA  VOLTAGE SET TO : 1100 mV
# value_mpu_temp : 1422312
# value_core_temp : 13d3712
# value_lpddr_temp : 14c2f12
# value_iva_temp : 1422b12
# (int*)PRM_VC_CFG_I2C_CLK  (-->0x4AE07BB8 PRM_VC_CFG_I2C_CLK) =  0x6026 (0x00006026)
# (int*)PRM_VC_CFG_I2C_MODE  (-->0x4AE07BB4 PRM_VC_CFG_I2C_MODE) =  0x0 (0x00000000)
# (int*)PRM_VC_CFG_VAL_BYPASS  (-->0x4AE07BA0 PRM_VC_VAL_BYPASS) =  value_mpu_temp (0x01422312)
# (int*)PRM_VC_CFG_I2C_CLK  (-->0x4AE07BB8 PRM_VC_CFG_I2C_CLK) =  0x6026 (0x00006026)
# (int*)PRM_VC_CFG_I2C_MODE  (-->0x4AE07BB4 PRM_VC_CFG_I2C_MODE) =  0x0 (0x00000000)
# (int*)PRM_VC_CFG_VAL_BYPASS  (-->0x4AE07BA0 PRM_VC_VAL_BYPASS) =  value_core_temp (0x013D3712)
# (int*)PRM_VC_CFG_I2C_CLK  (-->0x4AE07BB8 PRM_VC_CFG_I2C_CLK) =  0x6026 (0x00006026)
# (int*)PRM_VC_CFG_I2C_MODE  (-->0x4AE07BB4 PRM_VC_CFG_I2C_MODE) =  0x0 (0x00000000)
# (int*)PRM_VC_CFG_VAL_BYPASS  (-->0x4AE07BA0 PRM_VC_VAL_BYPASS) =  value_lpddr_temp (0x014C2F12)
# (int*)PRM_VC_CFG_I2C_CLK  (-->0x4AE07BB8 PRM_VC_CFG_I2C_CLK) =  0x6026 (0x00006026)
# (int*)PRM_VC_CFG_I2C_MODE  (-->0x4AE07BB4 PRM_VC_CFG_I2C_MODE) =  0x0 (0x00000000)
# (int*)PRM_VC_CFG_VAL_BYPASS  (-->0x4AE07BA0 PRM_VC_VAL_BYPASS) =  value_iva_temp (0x01422B12)
                               
# PRCM configuration --------------------------------------------------------------------

# Applying OPP WAKEUP 19_2 DDR 532 ------

# Set system clock to 19.2MHz 
# WRITE CM_SYS_CLKSEL  0x00000004
#    SYSCLKFREQ  (-->0x00000003 ) =  SYS_CLK_19_2 (0x00000003)

# opp_config OPP board 8
#  Zonda DPLL programming
# > Cortex A15 DPLL Board OPP 8

#  Put DPLL into bypass mode
MODIFY CM_CLKMODE_DPLL_MPU                                        0x00000007  0x00000005
POLL_ZERO CM_IDLEST_DPLL_MPU                                      0x00000001

#  Program DPLL_CLKOUT divider (M2 = 1)
WRITE CM_DIV_M2_DPLL_MPU                                          0x00000001

#  Program DPLL frequency (M = )
MODIFY CM_CLKSEL_DPLL_MPU                                         0x0007FF7F  0x00017708

#  Put DPLL into lock mode
WRITE  CM_CLKMODE_DPLL_MPU                                        0x00000007

#  Wait for DPLL to be locked
POLL_NZERO CM_IDLEST_DPLL_MPU                                     0x00000001

#  PER DPLL programming

MODIFY CM_CLKMODE_DPLL_PER                                        0x00000007  0x00000005
POLL_ZERO CM_IDLEST_DPLL_PER                                      0x00000001

WRITE CM_DIV_M2_DPLL_PER                                          0x00000004
WRITE CM_DIV_M3_DPLL_PER                                          0x00000003
WRITE CM_DIV_H11_DPLL_PER                                         0x00000002
WRITE CM_DIV_H12_DPLL_PER                                         0x00000002
WRITE CM_DIV_H14_DPLL_PER                                         0x00000000
WRITE CM_L4PER_CLKSTCTRL                                          0x00000002

MODIFY CM_CLKSEL_DPLL_PER                                         0x0007FF7F  0x00001400

#  Put DPLL into lock mode
WRITE CM_CLKMODE_DPLL_PER                                         0x00000007

#  Wait for DPLL to be locked
POLL_NZERO CM_IDLEST_DPLL_PER                                     0x00000001

#  Enable peripherals - NOTE ADDED EMIF2!!

WRITE CM_EMIF_EMIF1_CLKCTRL                                       0x00000001
WRITE CM_EMIF_EMIF2_CLKCTRL                                       0x00000001

WRITE CM_L4PER_UART1_CLKCTRL                                      0x00000002
WRITE CM_L4PER_UART2_CLKCTRL                                      0x00000002
WRITE CM_L4PER_UART3_CLKCTRL                                      0x00000002
WRITE CM_L4PER_UART4_CLKCTRL                                      0x00000002

#  Core DPLL programming
#  Put DPLL into bypass mode
MODIFY CM_CLKMODE_DPLL_CORE                                       0x00000007  0x00000005
POLL_ZERO CM_IDLEST_DPLL_CORE                                     0x00000001

#WRITE CM_CLKSEL_CORE                                              0x00000110
WRITE CM_CLKSEL_ABE                                               0x00000501
WRITE CM_DLL_CTRL                                                 0x00000000
WRITE CM_CLKSEL_DPLL_CORE                                         0x0000000B
WRITE CM_DIV_M2_DPLL_CORE                                         0x00000002
WRITE CM_DIV_M3_DPLL_CORE                                         0x00000005
WRITE CM_DIV_H11_DPLL_CORE                                        0x00000008
WRITE CM_DIV_H12_DPLL_CORE                                        0x00000004
WRITE CM_DIV_H13_DPLL_CORE                                        0x0000003E
WRITE CM_DIV_H14_DPLL_CORE                                        0x00000005
WRITE CM_DIV_H22_DPLL_CORE                                        0x00000005
WRITE CM_DIV_H23_DPLL_CORE                                        0x00000007

MODIFY CM_CLKSEL_DPLL_CORE                                        0x0007FF7F  0x00029910
#  Put core DPLL into lock mode


WRITE CM_EMIF_CLKSTCTRL                                           0x00000002
#  EMIF1
POLL_ZERO CM_EMIF_EMIF1_CLKCTRL                                   0x00030000
#  EMIF2
POLL_ZERO CM_EMIF_EMIF2_CLKCTRL                                   0x00030000
#  start freq_update in CM_SHADOW_FREQ_CONFIG1 and CM_SHADOW_FREQ_CONFIG2 
WRITE CM_SHADOW_FREQ_CONFIG2                                      0x00000024
WRITE CM_SHADOW_FREQ_CONFIG1                                      0x00001709

#  wait for CM_SHADOW_FREQ_CONFIG1.FREQ_UPDATE to be cleared by PRCM
POLL_NZERO CM_SHADOW_FREQ_CONFIG1                                 0x00000001

#  configure MEMIF domain back in HW_AUTO
WRITE CM_EMIF_CLKSTCTRL                                           0x00000003

WAIT_N                                                            0x2800

#  Wait for DPLL to be locked
POLL_NZERO CM_IDLEST_DPLL_CORE                                    0x00000001

# Dropping ABE and DUCATI configuration

# opp_config OPP Board FINISHED 8

#WRITE        CM_L3INIT_HSMMC1_CLKCTRL            0x00000002
#WRITE        CM_L3INIT_HSMMC1_CLKCTRL            0x01000000
#WRITE        CM_L3INIT_HSMMC2_CLKCTRL            0x00000002
#WRITE        CM_L3INIT_HSMMC2_CLKCTRL            0x01000000

# Other configurations ------------------------------------------------------------------

DEBUG_UART   0x0003

