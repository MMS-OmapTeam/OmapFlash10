{\rtf1\adeflang1025\ansi\ansicpg1252\uc1\adeff0\deff0\stshfdbch0\stshfloch0\stshfhich0\stshfbi0\deflang1033\deflangfe1033{\fonttbl{\f0\froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}{\f2\fmodern\fcharset0\fprq1{\*\panose 02070309020205020404}Courier New;}{\f39\froman\fcharset238\fprq2 Times New Roman CE;}
{\f40\froman\fcharset204\fprq2 Times New Roman Cyr;}{\f42\froman\fcharset161\fprq2 Times New Roman Greek;}{\f43\froman\fcharset162\fprq2 Times New Roman Tur;}{\f44\fbidi \froman\fcharset177\fprq2 Times New Roman (Hebrew);}
{\f45\fbidi \froman\fcharset178\fprq2 Times New Roman (Arabic);}{\f46\froman\fcharset186\fprq2 Times New Roman Baltic;}{\f47\froman\fcharset163\fprq2 Times New Roman (Vietnamese);}{\f59\fmodern\fcharset238\fprq1 Courier New CE;}
{\f60\fmodern\fcharset204\fprq1 Courier New Cyr;}{\f62\fmodern\fcharset161\fprq1 Courier New Greek;}{\f63\fmodern\fcharset162\fprq1 Courier New Tur;}{\f64\fbidi \fmodern\fcharset177\fprq1 Courier New (Hebrew);}
{\f65\fbidi \fmodern\fcharset178\fprq1 Courier New (Arabic);}{\f66\fmodern\fcharset186\fprq1 Courier New Baltic;}{\f67\fmodern\fcharset163\fprq1 Courier New (Vietnamese);}}{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;
\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;
\red128\green128\blue128;\red192\green192\blue192;}{\stylesheet{\ql \li0\ri0\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \rtlch\fcs1 \af0\afs24\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 
\snext0 Normal;}{\*\cs10 \additive \ssemihidden Default Paragraph Font;}{\*
\ts11\tsrowd\trftsWidthB3\trpaddl108\trpaddr108\trpaddfl3\trpaddft3\trpaddfb3\trpaddfr3\trcbpat1\trcfpat1\tblind0\tblindtype3\tscellwidthfts0\tsvertalt\tsbrdrt\tsbrdrl\tsbrdrb\tsbrdrr\tsbrdrdgl\tsbrdrdgr\tsbrdrh\tsbrdrv 
\ql \li0\ri0\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \rtlch\fcs1 \af0\afs20 \ltrch\fcs0 \fs20\lang1024\langfe1024\cgrid\langnp1024\langfenp1024 \snext11 \ssemihidden Normal Table;}}
{\*\latentstyles\lsdstimax156\lsdlockeddef0}{\*\rsidtbl \rsid2377021\rsid4533422\rsid12403049\rsid12873148\rsid13183806}{\*\generator Microsoft Word 11.0.0000;}{\info{\operator Jens Hvelplund Odborg}{\creatim\yr2009\mo9\dy16\hr14\min10}
{\revtim\yr2009\mo9\dy16\hr14\min54}{\version2}{\edmins43}{\nofpages4}{\nofwords1018}{\nofchars5806}{\nofcharsws6811}{\vern24613}{\*\password 00000000}}{\*\xmlnstbl {\xmlns1 http://schemas.microsoft.com/office/word/2003/wordml}}
\paperw12240\paperh15840\margl1800\margr1800\margt1440\margb1440\gutter0\ltrsect 
\widowctrl\ftnbj\aenddoc\donotembedsysfont0\donotembedlingdata1\grfdocevents0\validatexml0\showplaceholdtext0\ignoremixedcontent0\saveinvalidxml0\showxmlerrors0\horzdoc\dghspace120\dgvspace120\dghorigin1701\dgvorigin1984\dghshow0\dgvshow3
\jcompress\viewkind4\viewscale100\rsidroot4533422 \fet0{\*\wgrffmtfilter 013f}\ilfomacatclnup0\ltrpar \sectd \ltrsect\linex0\sectdefaultcl\sftnbj {\*\pnseclvl1\pnucrm\pnstart1\pnindent720\pnhang {\pntxta .}}{\*\pnseclvl2
\pnucltr\pnstart1\pnindent720\pnhang {\pntxta .}}{\*\pnseclvl3\pndec\pnstart1\pnindent720\pnhang {\pntxta .}}{\*\pnseclvl4\pnlcltr\pnstart1\pnindent720\pnhang {\pntxta )}}{\*\pnseclvl5\pndec\pnstart1\pnindent720\pnhang {\pntxtb (}{\pntxta )}}{\*\pnseclvl6
\pnlcltr\pnstart1\pnindent720\pnhang {\pntxtb (}{\pntxta )}}{\*\pnseclvl7\pnlcrm\pnstart1\pnindent720\pnhang {\pntxtb (}{\pntxta )}}{\*\pnseclvl8\pnlcltr\pnstart1\pnindent720\pnhang {\pntxtb (}{\pntxta )}}{\*\pnseclvl9\pnlcrm\pnstart1\pnindent720\pnhang 
{\pntxtb (}{\pntxta )}}\pard\plain \ltrpar\ql \li0\ri0\nowidctlpar\wrapdefault\faauto\rin0\lin0\itap0 \rtlch\fcs1 \af0\afs24\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 
\f2\fs20\striked1\insrsid15749908\charrsid4533422 FastBoot  Version  0.4
\par }{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\insrsid4533422 OMAPFlash Version  0.1
\par }{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\insrsid15749908 ----------------------
\par 
\par The fastboot protocol is a mechanism for communicating with bootloaders
\par over USB.  It is designed to be very straightforward to implement, to
\par allow it to be used across a wide range of devices and from hosts running
\par }{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\highlight6\insrsid15749908\charrsid4533422 Linux}{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\insrsid15749908 , Windows, or }{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 
\f2\fs20\highlight6\insrsid15749908\charrsid4533422 OSX}{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\insrsid15749908 .
\par 
\par 
\par Basic Requirements
\par ------------------
\par 
\par * Two bulk endpoints (in, out) are required
\par * Max packet size must be 64 bytes for full-speed and 512 bytes for 
\par   high-speed USB
\par * The protocol is entirely host-driven and synchronous (unlike the
\par   multi-channel, bi-directional, asynchronous ADB protocol)
\par 
\par 
\par Transport and Framing
\par ---------------------
\par 
\par }{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\ul\insrsid12873148\charrsid12873148 0. Peripheral boot}{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\ul\insrsid12873148 
\par }{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\insrsid12873148    }{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\ul\insrsid12873148 ... }{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\ul\highlight6\insrsid12873148\charrsid12873148 (to be described)}{
\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\ul\insrsid12873148\charrsid12873148 
\par }{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\insrsid12873148    }{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\ul\insrsid12873148\charrsid12873148 Ends by client sending an OKAY packaget
\par }{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\insrsid12873148 
\par }{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\insrsid15749908 1. Host sends a command, which is an ascii string in a single
\par    packet no greater than 64 bytes.}{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\insrsid13183806  }{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\ul\insrsid13183806 Prefixed by 4 byte binary size }{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 
\f2\fs20\insrsid13183806 
\par    }{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\ul\insrsid13183806 (OMAP ROM USB RX API require that the number of bytes to be }{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\insrsid15749908 
\par }{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\insrsid13183806    }{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\ul\insrsid13183806 received is known)}{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\ul\insrsid13183806\charrsid13183806 
\par }{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\insrsid15749908 
\par 2. Client response with a single packet no greater than }{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\striked1\insrsid15749908\charrsid4533422 64}{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\insrsid15749908  }{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 
\f2\fs20\ul\insrsid4533422\charrsid4533422 128}{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \i\f2\fs20\insrsid4533422  }{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\insrsid15749908 bytes.
\par    The first four bytes of the response are "OKAY", "FAIL", "DATA", 
\par }{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\insrsid4533422    }{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\ul\insrsid4533422\charrsid4533422 "STAT", "READ",
\par }{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\insrsid15749908    or "INFO".  Additional bytes may contain an (ascii) informative
\par    message}{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \i\f2\fs20\insrsid4533422 .}{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\insrsid13183806  }{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\ul\insrsid13183806 The host response immediately
 with an ACK in the form of }{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\insrsid15749908 
\par }\pard \ltrpar\ql \li0\ri0\nowidctlpar\wrapdefault\faauto\rin0\lin0\itap0\pararsid13183806 {\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\insrsid13183806    }{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\ul\insrsid13183806\charrsid13183806 
a 4 byte of zero packages}{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\ul\insrsid13183806  (this is to avoid issues due the fact 
\par }{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\insrsid13183806    }{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\ul\insrsid13183806 that OMAP ROM USB API do not support duplex)
\par }\pard \ltrpar\ql \li0\ri0\nowidctlpar\wrapdefault\faauto\rin0\lin0\itap0 {\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\insrsid15749908 
\par    a. INFO -> the remaining }{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\striked1\insrsid15749908\charrsid12403049 60}{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\insrsid15749908  }{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 
\f2\fs20\ul\insrsid12403049\charrsid12403049 124}{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\insrsid12403049  }{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\insrsid15749908 bytes are an informative message
\par       (providing progress or diagnostic messages).  They should 
\par       be displayed and then step #2 repeats
\par 
\par    b. FAIL -> the requested command failed.  The remaining 60 bytes 
\par       of the response (if present) provide a textual failure message 
\par       to present to the user.  Stop.
\par 
\par    c. OKAY -> the requested command completed successfully.  Go to #5
\par 
\par    d. DATA -> the requested command is ready for the data phase.
\par       A DATA response packet will be 12 bytes long, in the form of
\par       DATA00000000 where the 8 digit hexidecimal number represents
\par       the total data size to transfer.
\par }{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\insrsid12403049 
\par }\pard \ltrpar\ql \li0\ri0\nowidctlpar\wrapdefault\faauto\rin0\lin0\itap0\pararsid12403049 {\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\insrsid12403049    }{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\ul\insrsid12403049\charrsid12403049 e. STAT -> 
the remaining 124 bytes are used to give progress 
\par }{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\insrsid12403049       }{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\ul\insrsid12403049\charrsid12403049 information and then step #2 repeats
\par }\pard \ltrpar\ql \li0\ri0\nowidctlpar\wrapdefault\faauto\rin0\lin0\itap0 {\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\insrsid15749908 
\par }{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\insrsid12403049    }{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\ul\insrsid12403049\charrsid13183806 f. READ -> return of requested data from target. 21 bytes long
\par }{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\insrsid12403049       }{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\ul\insrsid13183806\charrsid13183806 the raming 17 bytes contain 8 digit hexadecimal size and 8 
\par }\pard \ltrpar\ql \li0\ri0\nowidctlpar\wrapdefault\faauto\rin0\lin0\itap0\pararsid13183806 {\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\insrsid13183806       }{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\ul\insrsid13183806\charrsid13183806 
digit hexadecimal checksum separated by space}{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\ul\insrsid13183806 . And is followed}{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\ul\insrsid12403049 
\par }{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\insrsid13183806\charrsid13183806       }{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\ul\insrsid13183806\charrsid13183806 by binary data
\par }\pard \ltrpar\ql \li0\ri0\nowidctlpar\wrapdefault\faauto\rin0\lin0\itap0 {\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\insrsid12403049 
\par }{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\insrsid15749908 3. Data phase.  Depending on the command, the host or client will 
\par    send the indicated amount of data.  Short packets are always 
\par    acceptable and zero-length packets are ignored. This phase }{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\insrsid12873148 c}{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\insrsid15749908 ontinues
\par    until the client has sent or received the number of bytes indicated
\par    in the "DATA" response above.
\par 
\par 4. Client responds with a single packet no greater than }{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\striked1\insrsid15749908\charrsid12873148 64}{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\insrsid15749908  }{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 
\f2\fs20\ul\insrsid12873148\charrsid12873148 128}{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\insrsid12873148  }{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\insrsid15749908 bytes.  
\par    The first four bytes of the response are "OKAY", "FAIL", or "INFO".  
\par    Similar to #2:
\par 
\par    a. INFO -> display the remaining }{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\striked1\insrsid12873148\charrsid12873148 64}{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\insrsid12873148  }{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 
\f2\fs20\ul\insrsid12873148\charrsid12873148 128}{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\insrsid12873148  }{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\insrsid15749908 bytes and return to #4
\par    
\par    b. FAIL -> display the remaining }{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\striked1\insrsid12873148\charrsid12873148 64}{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\insrsid12873148  }{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 
\f2\fs20\ul\insrsid12873148\charrsid12873148 128}{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\insrsid12873148  }{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\insrsid15749908 bytes (if present) as a }{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 
\f2\fs20\insrsid12873148 
\par       }{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\insrsid15749908 failure}{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\insrsid12873148  }{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\insrsid15749908 reason and consider the command failed.  Stop.
\par 
\par    c. OKAY -> success.  Go to #5
\par 
\par 5. Success.  Stop.
\par 
\par }{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\ul\insrsid12873148 OMAP ROM API requires that all package musy be of a size dividable by
\par 4}{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\ul\insrsid15749908\charrsid12873148 
\par }{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\insrsid12873148 
\par 
\par 
\par 
\par }{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\insrsid15749908 Example Session
\par ---------------
\par }{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\insrsid12873148 
\par }{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\ul\insrsid12873148 See example.log}{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\ul\insrsid12873148\charrsid12873148 
\par }{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\insrsid15749908 
\par }{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\striked1\insrsid15749908\charrsid12873148 Host:    "getvar:version"        request version variable
\par 
\par Client:  "OKAY0.4"               return version "0.4"
\par 
\par Host:    "getvar:nonexistant"    request some undefined variable
\par 
\par Client:  "OKAY"                  return value ""
\par 
\par Host:    "download:00001234"     request to send 0x1234 bytes of data
\par 
\par Client:  "DATA00001234"          ready to accept data
\par 
\par Host:    < 0x1234 bytes >        send data
\par 
\par Client:  "OKAY"                  success
\par 
\par Host:    "flash:bootloader"      request to flash the data to the bootloader
\par 
\par Client:  "INFOerasing flash"     indicate status / progress
\par          "INFOwriting flash"
\par          "OKAY"                  indicate success
\par 
\par Host:    "powerdown"             send a command
\par 
\par Client:  "FAILunknown command"   indicate failure
\par }{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\insrsid15749908 
\par 
\par Command Reference
\par -----------------
\par 
\par }{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\ul\highlight6\insrsid12873148\charrsid12873148 (to be described)}{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\insrsid12873148 
\par 
\par }{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\insrsid15749908 * Command parameters are indicated by printf-style escape sequences.
\par 
\par * Commands are ascii strings and sent without the quotes (which are
\par   for illustration only here) and without a trailing 0 byte.
\par 
\par * Commands that begin with a lowercase letter are reserved for this
\par   specification.  OEM-specific commands should not begin with a 
\par   lowercase letter, to prevent incompatibilities with future specs.
\par 
\par  "getvar:%s"           Read a config/version variable from the bootloader.
\par                        The variable contents will be returned after the
\par                        OKAY response.
\par 
\par  "download:%08x"       Write data to memory which will be later used
\par                        by "boot", "ramdisk", "flash", etc.  The client
\par                        will reply with "DATA%08x" if it has enough 
\par                        space in RAM or "FAIL" if not.  The size of
\par                        the download is remembered.
\par 
\par   "verify:%08x"        Send a digital signature to verify the downloaded
\par                        data.  Required if the bootloader is "secure"
\par                        otherwise "flash" and "boot" will be ignored.
\par 
\par   "flash:%s"           Write the previously downloaded image to the
\par                        named partition (if possible).
\par 
\par   "erase:%s"           Erase the indicated partition (clear to 0xFFs)
\par 
\par   "boot"               The previously downloaded data is a boot.img
\par                        and should be booted according to the normal
\par                        procedure for a boot.img
\par 
\par   "continue"           Continue booting as normal (if possible)
\par 
\par   "reboot"             Reboot the device.
\par 
\par   "reboot-bootloader"  Reboot back into the bootloader.
\par                        Useful for upgrade processes that require upgrading
\par                        the bootloader and then upgrading other partitions
\par                        using the new bootloader.
\par 
\par   "powerdown"          Power off the device.
\par 
\par 
\par 
\par Client Variables
\par ----------------
\par 
\par The "getvar:%s" command is used to read client variables which
\par represent various information about the device and the software
\par on it.
\par 
\par The various currently defined names are:
\par 
\par   version             Version of FastBoot protocol supported.
\par                       It should be "0.3" for this document.
\par 
\par   version-bootloader  Version string for the Bootloader.
\par 
\par   version-baseband    Version string of the Baseband Software
\par 
\par   product             Name of the product
\par 
\par   serialno            Product serial number
\par 
\par   secure              If the value is "yes", this is a secure
\par                       bootloader requiring a signature before
\par                       it will install or boot images.
\par 
\par Names starting with a lowercase character are reserved by this
\par specification.  OEM-specific names should not start with lowercase
\par characters.
\par 
\par 
\par 
\par }}